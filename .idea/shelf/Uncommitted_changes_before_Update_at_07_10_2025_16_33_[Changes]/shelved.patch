Index: lab4/app/globals.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import \"tailwindcss\";\r\n@import \"tw-animate-css\";\r\n\r\n:root {\r\n  --background: oklch(0.97 0 0);\r\n  --foreground: oklch(0.18 0 0);\r\n  --card: rgba(255, 255, 255, 0.05);\r\n  --border: rgba(255, 255, 255, 0.15);\r\n  --primary: oklch(0.6 0.2 260);\r\n  --primary-foreground: white;\r\n  --accent: oklch(0.75 0.1 280);\r\n  --accent-foreground: white;\r\n  --muted: oklch(0.97 0 0);\r\n  --muted-foreground: oklch(0.56 0 0);\r\n  --destructive: oklch(0.577 0.245 27.325);\r\n  --destructive-foreground: white;\r\n  --ring: oklch(0.708 0 0);\r\n  --input: rgba(255,255,255,0.05);\r\n}\r\n\r\n@theme inline {\r\n  --color-background: var(--background);\r\n  --color-foreground: var(--foreground);\r\n  --color-card: var(--card);\r\n  --color-border: var(--border);\r\n  --color-primary: var(--primary);\r\n  --color-primary-foreground: var(--primary-foreground);\r\n  --color-accent: var(--accent);\r\n  --color-accent-foreground: var(--accent-foreground);\r\n  --color-muted: var(--muted);\r\n  --color-muted-foreground: var(--muted-foreground);\r\n  --color-destructive: var(--destructive);\r\n  --color-destructive-foreground: var(--destructive-foreground);\r\n  --color-input: var(--input);\r\n  --color-ring: var(--ring);\r\n  --radius: 0.75rem;\r\n  --radius-md: calc(var(--radius) - 2px);\r\n  --radius-lg: var(--radius);\r\n  --radius-xl: calc(var(--radius) + 4px);\r\n}\r\n\r\n@layer base {\r\n  * {\r\n    @apply border-border outline-ring/50;\r\n  }\r\n  body {\r\n    @apply bg-background text-foreground;\r\n  }\r\n}\r\n\r\n.task-completed {\r\n  @apply line-through opacity-60 scale-[0.98] blur-[0.3px];\r\n}\r\n\r\n.text-glow {\r\n  color: #000;\r\n  text-shadow:\r\n          0 0 6px rgba(255,255,255,0.7),\r\n          0 0 12px rgba(255,255,255,0.6),\r\n          0 0 24px rgba(255,255,255,0.4);\r\n  animation: glow-pulse 3s ease-in-out infinite;\r\n}\r\n\r\n@keyframes glow-pulse {\r\n  0%, 100% {\r\n    text-shadow:\r\n            0 0 6px rgba(255,255,255,0.7),\r\n            0 0 12px rgba(255,255,255,0.6),\r\n            0 0 24px rgba(255,255,255,0.4);\r\n  }\r\n  50% {\r\n    text-shadow:\r\n            0 0 10px rgba(255,255,255,0.9),\r\n            0 0 20px rgba(255,255,255,0.7),\r\n            0 0 30px rgba(255,255,255,0.5);\r\n  }\r\n}\r\n\r\n.gradient-bg {\r\n  background: linear-gradient(\r\n          270deg,\r\n          #E7D2CF,\r\n          #C7CECB,\r\n          #6CBEBF,\r\n          #027683\r\n  );\r\n  background-size: 800% 800%;\r\n  animation: gradientFlow 20s ease infinite;\r\n}\r\n@keyframes gradientFlow {\r\n  0%   { background-position: 0% 50%; }\r\n  50%  { background-position: 100% 50%; }\r\n  100% { background-position: 0% 50%; }\r\n}\r\n\r\n@keyframes fade-in {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to   { opacity: 1; transform: translateY(0); }\r\n}\r\n.animate-fade-in {\r\n  animation: fade-in 0.8s ease-out forwards;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/app/globals.css b/lab4/app/globals.css
--- a/lab4/app/globals.css	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ b/lab4/app/globals.css	(date 1759840098779)
@@ -2,101 +2,229 @@
 @import "tw-animate-css";
 
 :root {
-  --background: oklch(0.97 0 0);
-  --foreground: oklch(0.18 0 0);
-  --card: rgba(255, 255, 255, 0.05);
-  --border: rgba(255, 255, 255, 0.15);
-  --primary: oklch(0.6 0.2 260);
-  --primary-foreground: white;
-  --accent: oklch(0.75 0.1 280);
-  --accent-foreground: white;
+  --background: oklch(1 0 0);
+  --foreground: oklch(0.145 0 0);
+  --card: oklch(1 0 0);
+  --card-foreground: oklch(0.145 0 0);
+  --popover: oklch(1 0 0);
+  --popover-foreground: oklch(0.145 0 0);
+  --primary: oklch(0.205 0 0);
+  --primary-foreground: oklch(0.985 0 0);
+  --secondary: oklch(0.97 0 0);
+  --secondary-foreground: oklch(0.205 0 0);
   --muted: oklch(0.97 0 0);
-  --muted-foreground: oklch(0.56 0 0);
+  --muted-foreground: oklch(0.556 0 0);
+  --accent: oklch(0.97 0 0);
+  --accent-foreground: oklch(0.205 0 0);
   --destructive: oklch(0.577 0.245 27.325);
-  --destructive-foreground: white;
+  --destructive-foreground: oklch(0.577 0.245 27.325);
+  --border: oklch(0.922 0 0);
+  --input: oklch(0.922 0 0);
   --ring: oklch(0.708 0 0);
-  --input: rgba(255,255,255,0.05);
+  --chart-1: oklch(0.646 0.222 41.116);
+  --chart-2: oklch(0.6 0.118 184.704);
+  --chart-3: oklch(0.398 0.07 227.392);
+  --chart-4: oklch(0.828 0.189 84.429);
+  --chart-5: oklch(0.769 0.188 70.08);
+  --radius: 0.625rem;
+  --sidebar: oklch(0.985 0 0);
+  --sidebar-foreground: oklch(0.145 0 0);
+  --sidebar-primary: oklch(0.205 0 0);
+  --sidebar-primary-foreground: oklch(0.985 0 0);
+  --sidebar-accent: oklch(0.97 0 0);
+  --sidebar-accent-foreground: oklch(0.205 0 0);
+  --sidebar-border: oklch(0.922 0 0);
+  --sidebar-ring: oklch(0.708 0 0);
+}
+
+.dark {
+  --background: oklch(0.145 0 0);
+  --foreground: oklch(0.985 0 0);
+  --card: oklch(0.145 0 0);
+  --card-foreground: oklch(0.985 0 0);
+  --popover: oklch(0.145 0 0);
+  --popover-foreground: oklch(0.985 0 0);
+  --primary: oklch(0.985 0 0);
+  --primary-foreground: oklch(0.205 0 0);
+  --secondary: oklch(0.269 0 0);
+  --secondary-foreground: oklch(0.985 0 0);
+  --muted: oklch(0.269 0 0);
+  --muted-foreground: oklch(0.708 0 0);
+  --accent: oklch(0.269 0 0);
+  --accent-foreground: oklch(0.985 0 0);
+  --destructive: oklch(0.396 0.141 25.723);
+  --destructive-foreground: oklch(0.637 0.237 25.331);
+  --border: oklch(0.269 0 0);
+  --input: oklch(0.269 0 0);
+  --ring: oklch(0.439 0 0);
+  --chart-1: oklch(0.488 0.243 264.376);
+  --chart-2: oklch(0.696 0.17 162.48);
+  --chart-3: oklch(0.769 0.188 70.08);
+  --chart-4: oklch(0.627 0.265 303.9);
+  --chart-5: oklch(0.645 0.246 16.439);
+  --sidebar: oklch(0.205 0 0);
+  --sidebar-foreground: oklch(0.985 0 0);
+  --sidebar-primary: oklch(0.488 0.243 264.376);
+  --sidebar-primary-foreground: oklch(0.985 0 0);
+  --sidebar-accent: oklch(0.269 0 0);
+  --sidebar-accent-foreground: oklch(0.985 0 0);
+  --sidebar-border: oklch(0.269 0 0);
+  --sidebar-ring: oklch(0.439 0 0);
 }
 
 @theme inline {
+  /* optional: --font-sans, --font-serif, --font-mono if they are applied in the layout.tsx */
   --color-background: var(--background);
   --color-foreground: var(--foreground);
   --color-card: var(--card);
-  --color-border: var(--border);
+  --color-card-foreground: var(--card-foreground);
+  --color-popover: var(--popover);
+  --color-popover-foreground: var(--popover-foreground);
   --color-primary: var(--primary);
   --color-primary-foreground: var(--primary-foreground);
+  --color-secondary: var(--secondary);
+  --color-secondary-foreground: var(--secondary-foreground);
+  --color-muted: var(--muted);
+  --color-muted-foreground: var(--muted-foreground);
   --color-accent: var(--accent);
   --color-accent-foreground: var(--accent-foreground);
-  --color-muted: var(--muted);
-  --color-muted-foreground: var(--muted-foreground);
   --color-destructive: var(--destructive);
   --color-destructive-foreground: var(--destructive-foreground);
+  --color-border: var(--border);
   --color-input: var(--input);
   --color-ring: var(--ring);
-  --radius: 0.75rem;
+  --color-chart-1: var(--chart-1);
+  --color-chart-2: var(--chart-2);
+  --color-chart-3: var(--chart-3);
+  --color-chart-4: var(--chart-4);
+  --color-chart-5: var(--chart-5);
+  --radius-sm: calc(var(--radius) - 4px);
   --radius-md: calc(var(--radius) - 2px);
   --radius-lg: var(--radius);
   --radius-xl: calc(var(--radius) + 4px);
+  --color-sidebar: var(--sidebar);
+  --color-sidebar-foreground: var(--sidebar-foreground);
+  --color-sidebar-primary: var(--sidebar-primary);
+  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
+  --color-sidebar-accent: var(--sidebar-accent);
+  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
+  --color-sidebar-border: var(--sidebar-border);
+  --color-sidebar-ring: var(--sidebar-ring);
 }
 
 @layer base {
   * {
     @apply border-border outline-ring/50;
+    transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
+    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
+    transition-duration: 200ms;
   }
   body {
     @apply bg-background text-foreground;
   }
 }
 
+.glass-card {
+  background: rgba(255, 255, 255, 0.95);
+  border: 1px solid rgba(0, 0, 0, 0.1);
+  box-shadow: 0 8px 32px rgba(139, 92, 246, 0.1);
+  transition: all 0.3s ease;
+}
+
+.dark .glass-card {
+  background: rgba(23, 23, 23, 0.95);
+  border: 1px solid rgba(255, 255, 255, 0.1);
+  box-shadow: 0 8px 32px rgba(167, 139, 250, 0.2);
+}
+
+.gradient-text {
+  background: linear-gradient(135deg, #8b5cf6 0%, #a78bfa 50%, #60a5fa 100%);
+  background-clip: text;
+  -webkit-background-clip: text;
+  -webkit-text-fill-color: transparent;
+}
+
+.gradient-bg {
+  background: linear-gradient(135deg, #8b5cf6 0%, #a78bfa 50%, #60a5fa 100%);
+}
+
+.animate-slide-up {
+  animation: slideUp 0.6s ease-out forwards;
+}
+
+.animate-scale-in {
+  animation: scaleIn 0.4s ease-out forwards;
+}
+
+.animate-float {
+  animation: float 3s ease-in-out infinite;
+}
+
+.animate-glow {
+  animation: glow 2s ease-in-out infinite;
+}
+
+.hover-lift {
+  transition: transform 0.3s ease, box-shadow 0.3s ease;
+}
+
+.hover-lift:hover {
+  transform: translateY(-4px);
+  box-shadow: 0 12px 40px rgba(139, 92, 246, 0.3);
+}
+
+.dark .hover-lift:hover {
+  box-shadow: 0 12px 40px rgba(167, 139, 250, 0.4);
+}
+
 .task-completed {
-  @apply line-through opacity-60 scale-[0.98] blur-[0.3px];
+  text-decoration: line-through;
+  opacity: 0.5;
 }
 
-.text-glow {
-  color: #000;
-  text-shadow:
-          0 0 6px rgba(255,255,255,0.7),
-          0 0 12px rgba(255,255,255,0.6),
-          0 0 24px rgba(255,255,255,0.4);
-  animation: glow-pulse 3s ease-in-out infinite;
+canvas {
+  will-change: contents;
 }
 
-@keyframes glow-pulse {
-  0%, 100% {
-    text-shadow:
-            0 0 6px rgba(255,255,255,0.7),
-            0 0 12px rgba(255,255,255,0.6),
-            0 0 24px rgba(255,255,255,0.4);
+
+@keyframes slideUp {
+  from {
+    opacity: 0;
+    transform: translateY(20px);
+  }
+  to {
+    opacity: 1;
+    transform: translateY(0);
+  }
+}
+
+@keyframes scaleIn {
+  from {
+    opacity: 0;
+    transform: scale(0.9);
+  }
+  to {
+    opacity: 1;
+    transform: scale(1);
+  }
+}
+
+@keyframes float {
+  0%,
+  100% {
+    transform: translateY(0);
   }
   50% {
-    text-shadow:
-            0 0 10px rgba(255,255,255,0.9),
-            0 0 20px rgba(255,255,255,0.7),
-            0 0 30px rgba(255,255,255,0.5);
+    transform: translateY(-10px);
   }
 }
 
-.gradient-bg {
-  background: linear-gradient(
-          270deg,
-          #E7D2CF,
-          #C7CECB,
-          #6CBEBF,
-          #027683
-  );
-  background-size: 800% 800%;
-  animation: gradientFlow 20s ease infinite;
-}
-@keyframes gradientFlow {
-  0%   { background-position: 0% 50%; }
-  50%  { background-position: 100% 50%; }
-  100% { background-position: 0% 50%; }
-}
-
-@keyframes fade-in {
-  from { opacity: 0; transform: translateY(10px); }
-  to   { opacity: 1; transform: translateY(0); }
+@keyframes glow {
+  0%,
+  100% {
+    box-shadow: 0 0 20px rgba(139, 92, 246, 0.3);
+  }
+  50% {
+    box-shadow: 0 0 40px rgba(139, 92, 246, 0.6);
+  }
 }
-.animate-fade-in {
-  animation: fade-in 0.8s ease-out forwards;
-}
Index: lab4/hooks/useTodos.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\r\n\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { fetchTodosApi, deleteTodoApi, toggleTodoApi } from \"../api/todos\";\r\n\r\nexport default function useTodos(limit = 20) {\r\n    const [todos, setTodos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchTodos = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const data = await fetchTodosApi(limit);\r\n            setTodos(data.map((t) => ({ ...t, id: String(t.id) })));\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [limit]);\r\n\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, [fetchTodos]);\r\n\r\n    const addTodo = useCallback((task) => {\r\n        const newTodo = {\r\n            id: `local_${Date.now()}`,\r\n            todo: task,\r\n            completed: false,\r\n            userId: 0,\r\n        };\r\n        setTodos((prev) => [newTodo, ...prev]);\r\n        return newTodo;\r\n    }, []);\r\n\r\n    const deleteTodo = useCallback(async (id) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setTodos((prev) => prev.filter((t) => String(t.id) !== String(id)));\r\n        try {\r\n            await deleteTodoApi(id);\r\n        } catch (err) {\r\n            setError(err);\r\n            throw err;\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const toggleTodo = useCallback(async (id) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        setTodos((prev) =>\r\n            prev.map((t) =>\r\n                String(t.id) === String(id) ? { ...t, completed: !t.completed } : t\r\n            )\r\n        );\r\n\r\n        const todo = todos.find((t) => String(t.id) === String(id));\r\n        try {\r\n            await toggleTodoApi(id, !todo.completed);\r\n        } catch (err) {\r\n            setTodos((prev) =>\r\n                prev.map((t) =>\r\n                    String(t.id) === String(id) ? { ...t, completed: todo.completed } : t\r\n                )\r\n            );\r\n            setError(err);\r\n            throw err;\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [todos]);\r\n\r\n    const refresh = useCallback(() => fetchTodos(), [fetchTodos]);\r\n\r\n    return {\r\n        todos,\r\n        isLoading,\r\n        error,\r\n        addTodo,\r\n        deleteTodo,\r\n        toggleTodo,\r\n        refresh,\r\n    };\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/hooks/useTodos.jsx b/lab4/hooks/useTodos.jsx
--- a/lab4/hooks/useTodos.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ b/lab4/hooks/useTodos.jsx	(date 1759837949944)
@@ -1,90 +1,195 @@
-"use client";
+"use client"
+
+import { useCallback, useEffect, useMemo, useState } from "react"
+import { fetchTodosApi, deleteTodoApi, toggleTodoApi, editTodoApi } from "../api/todos"
+
+function useDebounce(value, delay) {
+    const [debouncedValue, setDebouncedValue] = useState(value)
+
+    useEffect(() => {
+        const handler = setTimeout(() => {
+            setDebouncedValue(value)
+        }, delay)
 
-import { useEffect, useState, useCallback } from "react";
-import { fetchTodosApi, deleteTodoApi, toggleTodoApi } from "../api/todos";
+        return () => {
+            clearTimeout(handler)
+        }
+    }, [value, delay])
 
-export default function useTodos(limit = 20) {
-    const [todos, setTodos] = useState([]);
-    const [isLoading, setIsLoading] = useState(false);
-    const [error, setError] = useState(null);
+    return debouncedValue
+}
 
-    const fetchTodos = useCallback(async () => {
-        setIsLoading(true);
-        setError(null);
+export default function useTodos(initialLimit = 10) {
+    const [allTodos, setAllTodos] = useState([])
+    const [isLoading, setIsLoading] = useState(false)
+    const [error, setError] = useState(null)
+
+    const [filter, setFilter] = useState("all")
+    const [searchTerm, setSearchTerm] = useState("")
+    const debouncedSearchTerm = useDebounce(searchTerm, 300)
+
+    const [currentPage, setCurrentPage] = useState(1)
+    const [limitPerPage, setLimitPerPage] = useState(initialLimit)
+
+    useEffect(() => {
+        setCurrentPage(1)
+    }, [filter, debouncedSearchTerm])
+
+    const fetchAllTodos = useCallback(async () => {
+        setIsLoading(true)
+        setError(null)
         try {
-            const data = await fetchTodosApi(limit);
-            setTodos(data.map((t) => ({ ...t, id: String(t.id) })));
+            const { todos } = await fetchTodosApi(1000, 0)
+            const normalized = (todos || []).map((t) => ({ ...t, id: String(t.id) }))
+            setAllTodos(normalized)
         } catch (err) {
-            setError(err);
+            setError(err)
         } finally {
-            setIsLoading(false);
+            setIsLoading(false)
         }
-    }, [limit]);
+    }, [])
 
     useEffect(() => {
-        fetchTodos();
-    }, [fetchTodos]);
+        fetchAllTodos()
+    }, [fetchAllTodos])
+
+    const filteredTodos = useMemo(() => {
+        let result = [...allTodos]
+
+        if (filter === "active") result = result.filter((t) => !t.completed)
+        if (filter === "completed") result = result.filter((t) => t.completed)
+
+        const q = (debouncedSearchTerm || "").trim().toLowerCase()
+        if (q) {
+            result = result.filter((t) =>
+                String(t.todo || t.task || "")
+                    .toLowerCase()
+                    .includes(q),
+            )
+        }
+
+        return result
+    }, [allTodos, filter, debouncedSearchTerm])
+
+    const stats = useMemo(() => {
+        const total = filteredTodos.length
+        const completed = filteredTodos.filter((t) => t.completed).length
+        const remaining = total - completed
+
+        return { total, completed, remaining }
+    }, [filteredTodos])
+
+    const totalPages = useMemo(() => {
+        if (limitPerPage === -1) return 1
+        return Math.max(1, Math.ceil(filteredTodos.length / limitPerPage))
+    }, [filteredTodos, limitPerPage])
+
+    const paginatedTodos = useMemo(() => {
+        if (limitPerPage === -1) return filteredTodos
+        const start = (currentPage - 1) * limitPerPage
+        return filteredTodos.slice(start, start + limitPerPage)
+    }, [filteredTodos, currentPage, limitPerPage])
+
+    const goToNextPage = useCallback(() => {
+        setCurrentPage((p) => Math.min(totalPages, p + 1))
+    }, [totalPages])
+
+    const goToPrevPage = useCallback(() => {
+        setCurrentPage((p) => Math.max(1, p - 1))
+    }, [])
+
+    const setLimit = useCallback((limit) => {
+        setLimitPerPage(limit)
+        setCurrentPage(1)
+    }, [])
 
     const addTodo = useCallback((task) => {
         const newTodo = {
             id: `local_${Date.now()}`,
             todo: task,
             completed: false,
-            userId: 0,
-        };
-        setTodos((prev) => [newTodo, ...prev]);
-        return newTodo;
-    }, []);
+        }
+        setAllTodos((prev) => [newTodo, ...prev])
+        setCurrentPage(1)
+        return newTodo
+    }, [])
 
     const deleteTodo = useCallback(async (id) => {
-        setIsLoading(true);
-        setError(null);
-        setTodos((prev) => prev.filter((t) => String(t.id) !== String(id)));
+        setIsLoading(true)
+        setError(null)
         try {
-            await deleteTodoApi(id);
+            await deleteTodoApi(id)
+            setAllTodos((prev) => prev.filter((t) => String(t.id) !== String(id)))
         } catch (err) {
-            setError(err);
-            throw err;
+            setError(err)
+            throw err
         } finally {
-            setIsLoading(false);
+            setIsLoading(false)
         }
-    }, []);
-
-    const toggleTodo = useCallback(async (id) => {
-        setIsLoading(true);
-        setError(null);
+    }, [])
 
-        setTodos((prev) =>
-            prev.map((t) =>
-                String(t.id) === String(id) ? { ...t, completed: !t.completed } : t
-            )
-        );
-
-        const todo = todos.find((t) => String(t.id) === String(id));
-        try {
-            await toggleTodoApi(id, !todo.completed);
-        } catch (err) {
-            setTodos((prev) =>
-                prev.map((t) =>
-                    String(t.id) === String(id) ? { ...t, completed: todo.completed } : t
-                )
-            );
-            setError(err);
-            throw err;
+    const toggleTodo = useCallback(
+        async (id) => {
+            setIsLoading(true)
+            setError(null)
+            try {
+                const found = allTodos.find((t) => String(t.id) === String(id))
+                const newCompleted = !found?.completed
+                await toggleTodoApi(id, newCompleted)
+                setAllTodos((prev) => prev.map((t) => (String(t.id) === String(id) ? { ...t, completed: newCompleted } : t)))
+            } catch (err) {
+                setError(err)
+                throw err
+            } finally {
+                setIsLoading(false)
+            }
+        },
+        [allTodos],
+    )
+
+    const editTodoTitle = useCallback(async (id, newTitle) => {
+        setIsLoading(true)
+        setError(null)
+        try {
+            const updated = await editTodoApi(id, newTitle)
+            const newText = updated.todo || updated.title || newTitle
+            setAllTodos((prev) => prev.map((t) => (String(t.id) === String(id) ? { ...t, todo: newText } : t)))
+            return newText
+        } catch (err) {
+            setError(err)
+            throw err
         } finally {
-            setIsLoading(false);
+            setIsLoading(false)
         }
-    }, [todos]);
+    }, [])
 
-    const refresh = useCallback(() => fetchTodos(), [fetchTodos]);
+    const refresh = useCallback(() => {
+        fetchAllTodos()
+    }, [fetchAllTodos])
 
     return {
-        todos,
+        todos: paginatedTodos,
         isLoading,
         error,
         addTodo,
         deleteTodo,
         toggleTodo,
+        editTodoTitle,
+        limitPerPage,
+
+        searchTerm,
+        setSearchTerm,
+        filter,
+        setFilter,
+
+        currentPage,
+        totalPages,
+        totalTodos: filteredTodos.length,
+        goToNextPage,
+        goToPrevPage,
+        setLimit,
+
         refresh,
-    };
+        stats,
+    }
 }
Index: lab4/api/todos.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\r\n\r\nconst API_BASE = \"https://dummyjson.com/todos\";\r\n\r\nexport const fetchTodosApi = async (limit = 20) => {\r\n    const res = await axios.get(`${API_BASE}?limit=${limit}`);\r\n    return res.data?.todos || [];\r\n};\r\n\r\nexport const deleteTodoApi = async (id) => {\r\n    if (String(id).startsWith(\"local_\")) return;\r\n    await axios.delete(`${API_BASE}/${id}`);\r\n};\r\n\r\nexport const toggleTodoApi = async (id, completed) => {\r\n    if (String(id).startsWith(\"local_\")) return;\r\n    await axios.put(`${API_BASE}/${id}`, { completed });\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/api/todos.js b/lab4/api/todos.js
--- a/lab4/api/todos.js	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ b/lab4/api/todos.js	(date 1759843851662)
@@ -1,18 +1,36 @@
-import axios from "axios";
+import axios from "axios"
 
-const API_BASE = "https://dummyjson.com/todos";
+const API_BASE = "https://dummyjson.com/todos"
 
-export const fetchTodosApi = async (limit = 20) => {
-    const res = await axios.get(`${API_BASE}?limit=${limit}`);
-    return res.data?.todos || [];
-};
+
+export const fetchTodosApi = async (limit = 20, skip = 0) => {
+    const res = await axios.get(`${API_BASE}?limit=${limit}&skip=${skip}`)
+    // DummyJSON returns { todos: [...], total, skip, limit }
+    const data = res.data || {}
+    return {
+        todos: data.todos || [],
+        total: typeof data.total === "number" ? data.total : (data.todos || []).length,
+    }
+}
 
 export const deleteTodoApi = async (id) => {
-    if (String(id).startsWith("local_")) return;
-    await axios.delete(`${API_BASE}/${id}`);
-};
+    // if local (created client-side) - no network call
+    if (String(id).startsWith("local_")) return { ok: true }
+    const res = await axios.delete(`${API_BASE}/${id}`)
+    return res.data
+}
 
 export const toggleTodoApi = async (id, completed) => {
-    if (String(id).startsWith("local_")) return;
-    await axios.put(`${API_BASE}/${id}`, { completed });
-};
+    if (String(id).startsWith("local_")) return { ok: true }
+    const res = await axios.put(`${API_BASE}/${id}`, { completed })
+    return res.data
+}
+
+export const editTodoApi = async (id, newTitle) => {
+    if (String(id).startsWith("local_")) {
+        // mimic server response
+        return { id, todo: newTitle }
+    }
+    const res = await axios.put(`${API_BASE}/${id}`, { todo: newTitle })
+    return res.data
+}
Index: lab4/app/layout.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { GeistSans } from \"geist/font/sans\";\r\nimport { GeistMono } from \"geist/font/mono\";\r\nimport \"./globals.css\";\r\nimport { Toaster } from \"sonner\";\r\n\r\nexport const metadata = {\r\n    title: \"Todo App - Task Management\",\r\n    description: \"Сучасний список завдань\",\r\n};\r\n\r\nexport default function RootLayout({ children }) {\r\n    return (\r\n        <html lang=\"uk\" suppressHydrationWarning>\r\n            <body className={`font-sans ${GeistSans.variable} ${GeistMono.variable} antialiased`}>\r\n                    {children}\r\n                <Toaster richColors position=\"top-right\" />\r\n            </body>\r\n        </html>\r\n    );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/app/layout.jsx b/lab4/app/layout.jsx
--- a/lab4/app/layout.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ b/lab4/app/layout.jsx	(date 1759843869560)
@@ -1,20 +1,26 @@
-import { GeistSans } from "geist/font/sans";
-import { GeistMono } from "geist/font/mono";
-import "./globals.css";
-import { Toaster } from "sonner";
+import "./globals.css"
+import { Toaster } from "sonner"
+import { ThemeProvider } from "@/contexts/ThemeContext"
+import { CursorProvider } from "@/contexts/CursorContext"
+import DragonCursor from "@/components/ui/DragonCursor"
 
 export const metadata = {
-    title: "Todo App - Task Management",
-    description: "Сучасний список завдань",
-};
+    title: "Сучасний Todo",
+    description: "Інтерактивний список завдань",
+}
 
 export default function RootLayout({ children }) {
     return (
         <html lang="uk" suppressHydrationWarning>
-            <body className={`font-sans ${GeistSans.variable} ${GeistMono.variable} antialiased`}>
-                    {children}
+        <body>
+        <ThemeProvider>
+            <CursorProvider>
+                {children}
+                <DragonCursor />
                 <Toaster richColors position="top-right" />
-            </body>
+            </CursorProvider>
+        </ThemeProvider>
+        </body>
         </html>
-    );
-}
+    )
+}
\ No newline at end of file
Index: lab4/app/page.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import TodoApp from \"../components/TodoApp\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <main className=\"min-h-screen gradient-bg\">\r\n            <div className=\"container mx-auto px-4 py-12\">\r\n                <TodoApp />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/app/page.jsx b/lab4/app/page.jsx
--- a/lab4/app/page.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ b/lab4/app/page.jsx	(date 1759843036477)
@@ -1,11 +1,17 @@
-import TodoApp from "../components/TodoApp";
+"use client"
 
-export default function Home() {
+import Header from "@/components/layout/Header"
+import Footer from "@/components/layout/Footer"
+import TodoApp from "@/components/todo/TodoApp"
+
+export default function Page() {
     return (
-        <main className="min-h-screen gradient-bg">
-            <div className="container mx-auto px-4 py-12">
+        <div className="min-h-screen flex flex-col bg-background text-foreground transition-colors duration-300">
+            <Header />
+            <main className="flex-1 container mx-auto px-4 py-8">
                 <TodoApp />
-            </div>
-        </main>
-    );
+            </main>
+            <Footer />
+        </div>
+    )
 }
Index: lab4/components/TodoFilters.jsx
===================================================================
diff --git a/lab4/components/TodoFilters.jsx b/lab4/components/TodoFilters.jsx
deleted file mode 100644
--- a/lab4/components/TodoFilters.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,35 +0,0 @@
-"use client"
-
-export default function TodoFilters({ filter, setFilter, query, setQuery, remaining }) {
-    return (
-        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
-            <div className="flex items-center gap-2">
-                <button
-                    onClick={() => setFilter("all")}
-                    className={`px-3 py-2 rounded-md font-medium ${filter === "all" ? "bg-accent text-accent-foreground" : "bg-white/60"}`}
-                >Усі</button>
-                <button
-                    onClick={() => setFilter("active")}
-                    className={`px-3 py-2 rounded-md font-medium ${filter === "active" ? "bg-accent text-accent-foreground" : "bg-white/60"}`}
-                >Активні</button>
-                <button
-                    onClick={() => setFilter("completed")}
-                    className={`px-3 py-2 rounded-md font-medium ${filter === "completed" ? "bg-accent text-accent-foreground" : "bg-white/60"}`}
-                >Виконані</button>
-            </div>
-
-            <div className="flex items-center gap-3">
-                <input
-                    value={query}
-                    onChange={(e) => setQuery(e.target.value)}
-                    placeholder="Пошук завдань..."
-                    className="px-3 py-2 rounded-md bg-white/80 border border-border outline-none"
-                />
-
-                <div className="text-sm text-muted-foreground">
-                    <strong>{remaining}</strong> {remaining === 1 ? "task left" : "tasks left"}
-                </div>
-            </div>
-        </div>
-    )
-}
\ No newline at end of file
Index: lab4/components/TodoStatus.jsx
===================================================================
diff --git a/lab4/components/TodoStatus.jsx b/lab4/components/TodoStatus.jsx
deleted file mode 100644
--- a/lab4/components/TodoStatus.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,68 +0,0 @@
-"use client";
-
-export default function TodoStatus({ status, message, onRetry }) {
-    switch (status) {
-        case "loading":
-            return <LoadingSpinner />;
-
-        case "error":
-            return (
-                <div className="flex flex-col items-center justify-center space-y-3 text-center">
-                    <h3 className="text-xl font-semibold text-red-600">Помилка</h3>
-                    <p className="text-muted-foreground">{message || "Щось пішло не так"}</p>
-                    {onRetry && (
-                        <button
-                            onClick={onRetry}
-                            className="px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/90 transition"
-                        >
-                            Спробувати ще раз
-                        </button>
-                    )}
-                </div>
-            );
-
-        case "empty":
-            return (
-                <div className="text-center text-muted-foreground">
-                    {message || "Немає завдань"}
-                </div>
-            );
-
-        default:
-            return null;
-    }
-}
-
-export function LoadingSpinner() {
-    return (
-        <div className="flex flex-col items-center justify-center space-y-6">
-            <div className="relative">
-                <div className="w-20 h-20 border-4 border-border/50 border-t-primary rounded-full animate-spin"></div>
-                <div
-                    className="absolute inset-2 w-16 h-16 border-4 border-transparent border-r-accent rounded-full animate-spin"
-                    style={{ animationDirection: "reverse", animationDuration: "1.5s" }}
-                />
-                <div
-                    className="absolute inset-4 w-12 h-12 border-4 border-transparent border-b-primary rounded-full animate-spin"
-                    style={{ animationDuration: "2s" }}
-                />
-                <div className="absolute inset-0 flex items-center justify-center">
-                    <div className="w-3 h-3 bg-gradient-to-r from-primary to-accent rounded-full animate-pulse"></div>
-                </div>
-            </div>
-            <div className="text-center space-y-2">
-                <h3 className="text-xl font-bold gradient-text animate-pulse">
-                    Завантаження ...
-                </h3>
-                <p className="text-muted-foreground">Отримуємо дані з сервера</p>
-
-                {/* Крапки, що скачуть */}
-                <div className="flex justify-center space-x-1 mt-4">
-                    <div className="w-2 h-2 bg-primary rounded-full animate-bounce"></div>
-                    <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{ animationDelay: "0.1s" }}></div>
-                    <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{ animationDelay: "0.2s" }}></div>
-                </div>
-            </div>
-        </div>
-    );
-}
Index: lab4/components/TodoList.jsx
===================================================================
diff --git a/lab4/components/TodoList.jsx b/lab4/components/TodoList.jsx
deleted file mode 100644
--- a/lab4/components/TodoList.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,65 +0,0 @@
-"use client";
-
-import { useMemo, useState, useEffect } from "react";
-import AddTodoForm from "./AddTodoForm";
-import TodoItem from "./TodoItem";
-import TodoFilters from "./TodoFilters";
-import TodoStatus from "./TodoStatus";
-import TodoPagination from "./TodoPagination";
-import useTodos from "../hooks/useTodos";
-import { notify } from "./utils/notify";
-
-export default function TodoList() {
-    const { todos, isLoading, error, addTodo, deleteTodo, toggleTodo, refresh } = useTodos(50);
-    const [filter, setFilter] = useState("all");
-    const [query, setQuery] = useState("");
-    const [currentPage, setCurrentPage] = useState(1);
-    const [perPage, setPerPage] = useState(10);
-
-    useEffect(() => setCurrentPage(1), [filter, query]);
-
-    const remaining = useMemo(() => todos.filter((t) => !t.completed).length, [todos]);
-
-    const filtered = useMemo(() => {
-        const q = query.trim().toLowerCase();
-        return todos.filter((t) => {
-            const matchesQuery = !q || String(t.todo || t.task || "").toLowerCase().includes(q);
-            if (!matchesQuery) return false;
-            if (filter === "all") return true;
-            if (filter === "active") return !t.completed;
-            if (filter === "completed") return t.completed;
-            return true;
-        });
-    }, [todos, filter, query]);
-
-    const totalPages = Math.max(1, Math.ceil(filtered.length / (perPage === -1 ? filtered.length : perPage)));
-    const startIndex = (currentPage - 1) * perPage;
-    const visibleTodos = perPage === -1 ? filtered : filtered.slice(startIndex, startIndex + perPage);
-
-    const handleAddTodo = (task) => { addTodo(task); notify.success("Завдання додано"); setCurrentPage(1); };
-    const handleDelete = async (id) => { try { await deleteTodo(id); notify.error("Завдання видалено"); } catch { notify.error("Не вдалося видалити"); } };
-    const handleToggle = async (id) => { try { await toggleTodo(id); notify.info("Статус оновлено"); } catch { notify.error("Не вдалося оновити статус"); } };
-
-    return (
-        <div className="space-y-6">
-            <AddTodoForm onAdd={handleAddTodo} />
-            <TodoFilters filter={filter} setFilter={setFilter} query={query} setQuery={setQuery} remaining={remaining} />
-            <TodoStatus
-                status={isLoading ? "loading" : error ? "error" : visibleTodos.length === 0 ? "empty" : "ok"}
-                message={error ? String(error.message || error) : "Немає завдань за критеріями"}
-                onRetry={refresh}
-            />
-            {visibleTodos.map(todo => (
-                <TodoItem key={todo.id} id={todo.id} task={todo.todo || todo.task} completed={todo.completed} onDelete={handleDelete} onToggle={handleToggle} />
-            ))}
-            {filtered.length > 0 && (
-                <TodoPagination currentPage={currentPage} totalPages={totalPages} perPage={perPage} setPerPage={setPerPage} setCurrentPage={setCurrentPage} />
-            )}
-            {todos.length > 0 && (
-                <div className="text-center text-sm text-gray-600">
-                    {todos.length} {todos.length === 1 ? "завдання" : "завдань"} всього — <strong>{remaining} left</strong>
-                </div>
-            )}
-        </div>
-    );
-}
Index: lab4/components/TodoPagination.jsx
===================================================================
diff --git a/lab4/components/TodoPagination.jsx b/lab4/components/TodoPagination.jsx
deleted file mode 100644
--- a/lab4/components/TodoPagination.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,48 +0,0 @@
-"use client";
-
-import { ChevronLeft, ChevronRight } from "lucide-react";
-
-export default function TodoPagination({ currentPage, totalPages, perPage, setPerPage, setCurrentPage }) {
-    return (
-        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 pt-4 border-t border-border">
-            <label className="flex items-center gap-2 text-sm">
-                Показувати по:
-                <select
-                    value={perPage}
-                    onChange={(e) => { setPerPage(Number(e.target.value)); setCurrentPage(1); }}
-                    className="border rounded-md p-1 focus:outline-none focus:ring-2 focus:ring-blue-400"
-                >
-                    {[3, 5, 10, 20, -1].map((n) => (
-                        <option key={n} value={n}>
-                            {n === -1 ? "Усі" : n}
-                        </option>
-                    ))}
-                </select>
-            </label>
-
-            {perPage !== -1 && (
-                <div className="flex items-center gap-3">
-                    <button
-                        onClick={() => setCurrentPage((p) => Math.max(1, p - 1))}
-                        disabled={currentPage === 1}
-                        className="p-2 rounded-full border hover:bg-gray-100 disabled:opacity-40"
-                    >
-                        <ChevronLeft className="w-5 h-5" />
-                    </button>
-
-                    <span className="text-sm">
-            Сторінка {currentPage} з {totalPages}
-          </span>
-
-                    <button
-                        onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))}
-                        disabled={currentPage === totalPages}
-                        className="p-2 rounded-full border hover:bg-gray-100 disabled:opacity-40"
-                    >
-                        <ChevronRight className="w-5 h-5" />
-                    </button>
-                </div>
-            )}
-        </div>
-    );
-}
Index: lab4/components/TodoApp.jsx
===================================================================
diff --git a/lab4/components/TodoApp.jsx b/lab4/components/TodoApp.jsx
deleted file mode 100644
--- a/lab4/components/TodoApp.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,23 +0,0 @@
-"use client"
-
-import TodoList from "./TodoList"
-
-export default function TodoApp() {
-    return (
-        <div className="max-w-2xl mx-auto">
-            <div className="text-center mb-12">
-                <h1 className="text-5xl sm:text-6xl font-extrabold tracking-tight text-glow animate-fade-in">
-                    Task Management
-                </h1>
-
-                <p className="mt-4 text-xl sm:text-2xl font-medium tracking-wide text-glow animate-fade-in delay-200">
-                    Organize your tasks with a clean and intuitive interface
-                </p>
-            </div>
-
-            <div className="bg-white/60 border border-border/40 rounded-2xl shadow-xl p-10 backdrop-blur-md animate-fade-in delay-300">
-                <TodoList />
-            </div>
-        </div>
-    )
-}
Index: lab4/components/utils/notify.js
===================================================================
diff --git a/lab4/components/utils/notify.js b/lab4/components/utils/notify.js
deleted file mode 100644
--- a/lab4/components/utils/notify.js	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,22 +0,0 @@
-"use client";
-
-import { toast } from "sonner";
-import { CheckCircle2, Trash2, RefreshCw } from "lucide-react";
-
-export const notify = {
-    success: (message) => toast.success(
-        <span className="flex items-center gap-2">
-      <CheckCircle2 className="w-5 h-5 text-green-500" /> {message}
-    </span>
-    ),
-    error: (message) => toast.error(
-        <span className="flex items-center gap-2">
-      <Trash2 className="w-5 h-5 text-red-500" /> {message}
-    </span>
-    ),
-    info: (message) => toast.info(
-        <span className="flex items-center gap-2">
-      <RefreshCw className="w-5 h-5 text-blue-500" /> {message}
-    </span>
-    ),
-};
Index: lab4/components/AddTodoForm.jsx
===================================================================
diff --git a/lab4/components/AddTodoForm.jsx b/lab4/components/AddTodoForm.jsx
deleted file mode 100644
--- a/lab4/components/AddTodoForm.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,58 +0,0 @@
-"use client";
-import { useState } from "react";
-import { toast } from "sonner";
-
-export default function AddTodoForm({ onAdd }) {
-  const [task, setTask] = useState("");
-  const MAX = 100;
-  const len = task.trim().length;
-
-  const handleSubmit = (e) => {
-    e.preventDefault();
-
-    if (len === 0) {
-      toast.error("Завдання не може бути порожнім");
-      return;
-    }
-    if (len > MAX) {
-      toast.error(`Текст занадто довгий (максимум ${MAX} символів)`);
-      return;
-    }
-
-    onAdd(task.trim());
-    setTask("");
-  };
-
-  return (
-      <form
-          onSubmit={handleSubmit}
-          className="flex flex-col gap-2 mb-4 sm:flex-row sm:items-center"
-      >
-        <div className="flex-1">
-          <input
-              type="text"
-              value={task}
-              onChange={(e) => setTask(e.target.value)}
-              placeholder="Нове завдання..."
-              className="w-full border p-2 rounded"
-          />
-          {/* лічильник символів */}
-          <p
-              className={`text-sm mt-1 ${
-                  len > MAX ? "text-red-500" : "text-gray-500"
-              }`}
-          >
-            {len}/{MAX}
-          </p>
-        </div>
-
-        <button
-            type="submit"
-            className="bg-blue-500 text-white px-4 py-2 rounded disabled:opacity-50"
-            disabled={len === 0 || len > MAX}
-        >
-          Додати
-        </button>
-      </form>
-  );
-}
Index: lab4/components/TodoItem.jsx
===================================================================
diff --git a/lab4/components/TodoItem.jsx b/lab4/components/TodoItem.jsx
deleted file mode 100644
--- a/lab4/components/TodoItem.jsx	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ /dev/null	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
@@ -1,34 +0,0 @@
-"use client";
-import { Check, Trash2 } from "lucide-react";
-
-export default function TodoItem({ id, task, completed, onToggle, onDelete }) {
-    return (
-        <li className="flex items-center justify-between p-2 border-b border-gray-200">
-            <div className="flex items-center gap-2">
-                <button
-                    onClick={() => onToggle(id)}
-                    className={`p-1 rounded-full border ${
-                        completed ? "bg-green-500 border-green-500" : "border-gray-400"
-                    }`}
-                >
-                    {completed && <Check className="text-white w-4 h-4" />}
-                </button>
-
-                <span
-                    className={`select-none ${
-                        completed ? "line-through text-gray-400" : ""
-                    }`}
-                >
-          {task}
-        </span>
-            </div>
-
-            <button
-                onClick={() => onDelete(id)}
-                className="text-red-500 hover:text-red-700"
-            >
-                <Trash2 size={18} />
-            </button>
-        </li>
-    );
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1f93c2c0-a8f3-4454-8c56-73ac9426c6d3\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/lab4/README.md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/lab4/README.md\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/lab4/components/Toast.jsx\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"33ChcPYYgCHHLPjA17XRJDT2dJS\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/REACT/todo_list&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-WS-243.26053.12\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1f93c2c0-a8f3-4454-8c56-73ac9426c6d3\" name=\"Changes\" comment=\"\" />\r\n      <created>1758827040873</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1758827040873</updated>\r\n      <workItem from=\"1759127469409\" duration=\"2132000\" />\r\n      <workItem from=\"1759171994320\" duration=\"52000\" />\r\n      <workItem from=\"1759250290395\" duration=\"885000\" />\r\n      <workItem from=\"1759351483912\" duration=\"417000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add architecture + Fetching Data. Custom hook.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1759127591822</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1759127591822</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add architecture + Fetching Data. Custom hook.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add architecture + Fetching Data. Custom hook.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 59c5cd5db2c212a9ee710f6a130bac5cb40c5e80)
+++ b/.idea/workspace.xml	(date 1759843852056)
@@ -4,9 +4,36 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1f93c2c0-a8f3-4454-8c56-73ac9426c6d3" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/lab4/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/lab4/README.md" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/lab4/components/Toast.jsx" beforeDir="false" />
+    <list default="true" id="1f93c2c0-a8f3-4454-8c56-73ac9426c6d3" name="Changes" comment="lab 4">
+      <change afterPath="$PROJECT_DIR$/lab4/components/layout/Footer.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/layout/Header.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/AddTodoForm.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/TodoApp.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/TodoFilters.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/TodoItem.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/TodoList.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/TodoPagination.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/TodoStats.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/todo/TodoStatus.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/ui/DragonCursor.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/components/ui/LoadingSpinner.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/contexts/ThemeContext.jsx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/jsconfig.json" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lab4/lib/utils/notify.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/api/todos.js" beforeDir="false" afterPath="$PROJECT_DIR$/lab4/api/todos.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/app/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/lab4/app/globals.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/app/layout.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/lab4/app/layout.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/app/page.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/lab4/app/page.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/AddTodoForm.jsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/TodoApp.jsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/TodoFilters.jsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/TodoItem.jsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/TodoList.jsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/TodoPagination.jsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/TodoStatus.jsx" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/components/utils/notify.js" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/lab4/hooks/useTodos.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/lab4/hooks/useTodos.jsx" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -37,6 +64,15 @@
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\REACT\todo_list\lab4\lib" />
+      <recent name="D:\REACT\todo_list\lab4\components\ui" />
+      <recent name="D:\REACT\todo_list\lab4\components\todo" />
+      <recent name="D:\REACT\todo_list\lab4\components\layout" />
+      <recent name="D:\REACT\todo_list\lab4\contexts" />
+    </key>
+  </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -55,7 +91,11 @@
       <workItem from="1759127469409" duration="2132000" />
       <workItem from="1759171994320" duration="52000" />
       <workItem from="1759250290395" duration="885000" />
-      <workItem from="1759351483912" duration="417000" />
+      <workItem from="1759351483912" duration="559000" />
+      <workItem from="1759353081323" duration="903000" />
+      <workItem from="1759514716318" duration="606000" />
+      <workItem from="1759741771244" duration="4137000" />
+      <workItem from="1759835976970" duration="7774000" />
     </task>
     <task id="LOCAL-00001" summary="add architecture + Fetching Data. Custom hook.">
       <option name="closed" value="true" />
@@ -65,7 +105,15 @@
       <option name="project" value="LOCAL" />
       <updated>1759127591822</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="lab 4">
+      <option name="closed" value="true" />
+      <created>1759351951758</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1759351951758</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -84,6 +132,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="add architecture + Fetching Data. Custom hook." />
-    <option name="LAST_COMMIT_MESSAGE" value="add architecture + Fetching Data. Custom hook." />
+    <MESSAGE value="lab 4" />
+    <option name="LAST_COMMIT_MESSAGE" value="lab 4" />
   </component>
 </project>
\ No newline at end of file
Index: lab4/components/todo/TodoFilters.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/TodoFilters.jsx b/lab4/components/todo/TodoFilters.jsx
new file mode 100644
--- /dev/null	(date 1759836866925)
+++ b/lab4/components/todo/TodoFilters.jsx	(date 1759836866925)
@@ -0,0 +1,55 @@
+"use client"
+
+import { Search, Filter } from "lucide-react"
+
+export default function TodoFilters({ filter, setFilter, query, setQuery, remaining }) {
+    const filters = [
+        { id: "all", label: "Усі", emoji: "📋" },
+        { id: "active", label: "Активні", emoji: "⚡" },
+        { id: "completed", label: "Виконані", emoji: "✅" },
+    ]
+
+    return (
+        <div className="space-y-4">
+            <div className="relative">
+                <Search className="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-muted-foreground" />
+                <input
+                    type="text"
+                    placeholder="Пошук завдань..."
+                    value={query}
+                    onChange={(e) => setQuery(e.target.value)}
+                    className="w-full pl-12 pr-4 py-3 rounded-xl bg-input backdrop-blur-sm border border-border focus:border-primary focus:outline-none focus:ring-4 focus:ring-primary/20 transition-all duration-300"
+                />
+            </div>
+
+            <div className="flex flex-wrap items-center gap-3">
+                <div className="flex items-center gap-2 text-sm text-muted-foreground">
+                    <Filter className="w-4 h-4" />
+                    <span className="font-medium">Фільтр:</span>
+                </div>
+
+                <div className="flex gap-2 flex-wrap">
+                    {filters.map((f) => (
+                        <button
+                            key={f.id}
+                            onClick={() => setFilter(f.id)}
+                            className={`px-4 py-2 rounded-xl text-sm font-medium transition-all duration-300 ${
+                                filter === f.id
+                                    ? "gradient-bg text-primary-foreground shadow-lg shadow-primary/30 scale-105"
+                                    : "bg-input hover:bg-muted text-foreground hover:scale-105"
+                            }`}
+                        >
+                            <span className="mr-1">{f.emoji}</span>
+                            {f.label}
+                        </button>
+                    ))}
+                </div>
+
+                <div className="ml-auto flex items-center gap-2 px-4 py-2 rounded-xl bg-accent/10 border border-accent/20">
+                    <span className="text-sm text-muted-foreground">Залишилось:</span>
+                    <span className="text-lg font-bold gradient-text">{remaining}</span>
+                </div>
+            </div>
+        </div>
+    )
+}
Index: lab4/components/todo/TodoPagination.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/TodoPagination.jsx b/lab4/components/todo/TodoPagination.jsx
new file mode 100644
--- /dev/null	(date 1759836884485)
+++ b/lab4/components/todo/TodoPagination.jsx	(date 1759836884485)
@@ -0,0 +1,67 @@
+"use client"
+
+import { ChevronLeft, ChevronRight } from "lucide-react"
+
+export default function TodoPagination({
+                                           currentPage,
+                                           totalPages,
+                                           perPage,
+                                           setPerPage,
+                                           goToNextPage,
+                                           goToPrevPage,
+                                           totalItems,
+                                       }) {
+    return (
+        <div className="glass-card rounded-2xl p-4 space-y-4">
+            <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
+                <div className="flex items-center gap-3">
+                    <label className="text-sm font-medium text-muted-foreground">Показувати:</label>
+                    <select
+                        value={perPage}
+                        onChange={(e) => setPerPage(Number(e.target.value))}
+                        className="px-3 py-2 rounded-lg bg-input border border-border focus:border-primary focus:outline-none focus:ring-4 focus:ring-primary/20 transition-all duration-300 cursor-pointer"
+                    >
+                        {[3, 5, 10, 20, -1].map((n) => (
+                            <option key={n} value={n}>
+                                {n === -1 ? "Усі" : n}
+                            </option>
+                        ))}
+                    </select>
+                </div>
+
+                {perPage !== -1 && (
+                    <div className="flex items-center gap-2">
+                        <button
+                            onClick={goToPrevPage}
+                            disabled={currentPage === 1}
+                            className="p-2 rounded-lg hover:bg-primary/10 disabled:opacity-40 disabled:cursor-not-allowed transition-all duration-300 hover:scale-110 disabled:hover:scale-100"
+                            title="Попередня сторінка"
+                        >
+                            <ChevronLeft className="w-5 h-5 text-primary" />
+                        </button>
+
+                        <div className="px-4 py-2 rounded-lg bg-primary/10 border border-primary/20">
+              <span className="text-sm font-medium">
+                <span className="gradient-text font-bold">{currentPage}</span>
+                <span className="text-muted-foreground"> / {totalPages}</span>
+              </span>
+                        </div>
+
+                        <button
+                            onClick={goToNextPage}
+                            disabled={currentPage === totalPages}
+                            className="p-2 rounded-lg hover:bg-primary/10 disabled:opacity-40 disabled:cursor-not-allowed transition-all duration-300 hover:scale-110 disabled:hover:scale-100"
+                            title="Наступна сторінка"
+                        >
+                            <ChevronRight className="w-5 h-5 text-primary" />
+                        </button>
+                    </div>
+                )}
+
+                <div className="text-sm text-muted-foreground">
+                    Всього: <span className="font-bold gradient-text">{totalItems}</span>
+                </div>
+            </div>
+        </div>
+    )
+}
Index: lab4/jsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/jsconfig.json b/lab4/jsconfig.json
new file mode 100644
--- /dev/null	(date 1759842880506)
+++ b/lab4/jsconfig.json	(date 1759842880506)
@@ -0,0 +1,8 @@
+{
+  "compilerOptions": {
+    "baseUrl": ".",
+    "paths": {
+      "@/*": ["*"]
+    }
+  }
+}
Index: lab4/contexts/ThemeContext.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/contexts/ThemeContext.jsx b/lab4/contexts/ThemeContext.jsx
new file mode 100644
--- /dev/null	(date 1759840795139)
+++ b/lab4/contexts/ThemeContext.jsx	(date 1759840795139)
@@ -0,0 +1,55 @@
+"use client"
+
+import { createContext, useContext, useEffect, useState, useCallback, useMemo } from "react"
+
+const ThemeContext = createContext({
+    theme: "light",
+    toggleTheme: () => {},
+    mounted: false,
+})
+
+export function ThemeProvider({ children }) {
+    const [theme, setTheme] = useState("light")
+    const [mounted, setMounted] = useState(false)
+
+    useEffect(() => {
+        const savedTheme = localStorage.getItem("theme") || "light"
+        setTheme(savedTheme)
+
+        if (savedTheme === "dark") {
+            document.documentElement.classList.add("dark")
+            document.body.classList.add("dark")
+        }
+
+        setMounted(true)
+    }, [])
+
+    const toggleTheme = useCallback(() => {
+        setTheme((prevTheme) => {
+            const newTheme = prevTheme === "light" ? "dark" : "light"
+            localStorage.setItem("theme", newTheme)
+
+            // Використовуємо requestAnimationFrame для плавної зміни
+            requestAnimationFrame(() => {
+                if (newTheme === "dark") {
+                    document.documentElement.classList.add("dark")
+                    document.body.classList.add("dark")
+                } else {
+                    document.documentElement.classList.remove("dark")
+                    document.body.classList.remove("dark")
+                }
+            })
+
+            return newTheme
+        })
+    }, [])
+
+    const value = useMemo(
+        () => ({ theme, toggleTheme, mounted }),
+        [theme, toggleTheme, mounted]
+    )
+
+    return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>
+}
+
+export const useTheme = () => useContext(ThemeContext)
\ No newline at end of file
Index: lab4/components/ui/DragonCursor.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/ui/DragonCursor.jsx b/lab4/components/ui/DragonCursor.jsx
new file mode 100644
--- /dev/null	(date 1759843476659)
+++ b/lab4/components/ui/DragonCursor.jsx	(date 1759843476659)
@@ -0,0 +1,179 @@
+"use client"
+
+import { useEffect, useRef, useState } from "react"
+import { useCursor } from "@/contexts/CursorContext"
+
+export default function DragonCursor() {
+    const canvasRef = useRef(null)
+    const { cursorEnabled } = useCursor()
+    const animationRef = useRef(null)
+    const dragonRef = useRef(null)
+    const trailsRef = useRef([])
+    const targetRef = useRef({ x: 0, y: 0 })
+    const [isVisible, setIsVisible] = useState(true)
+
+    useEffect(() => {
+        if (cursorEnabled) {
+            setIsVisible(true)
+        } else {
+            // Даємо час на анімацію fade-out перед прихованням
+            const timer = setTimeout(() => setIsVisible(false), 300)
+            return () => clearTimeout(timer)
+        }
+    }, [cursorEnabled])
+
+    useEffect(() => {
+        if (!isVisible) return
+
+        const canvas = canvasRef.current
+        if (!canvas) return
+
+        const ctx = canvas.getContext("2d", { alpha: true })
+
+        function resizeCanvas() {
+            canvas.width = window.innerWidth
+            canvas.height = window.innerHeight
+
+            if (!dragonRef.current) {
+                dragonRef.current = {
+                    x: canvas.width / 2,
+                    y: canvas.height / 2,
+                    size: 20,
+                    angle: 0,
+                    speed: 0.05,
+                }
+                targetRef.current = {
+                    x: canvas.width / 2,
+                    y: canvas.height / 2,
+                }
+            }
+        }
+
+        resizeCanvas()
+        window.addEventListener("resize", resizeCanvas)
+
+        const getColors = () => {
+            const isDark = document.documentElement.classList.contains('dark')
+            return {
+                dragon: isDark ? "rgba(255, 255, 255, 0.8)" : "rgba(0, 0, 0, 0.8)",
+                trail: isDark ? "rgba(255, 255, 255, 0.5)" : "rgba(0, 0, 0, 0.5)"
+            }
+        }
+
+        function drawDragon(x, y, size, angle, color) {
+            ctx.save()
+            ctx.translate(x, y)
+            ctx.rotate(angle)
+
+            ctx.beginPath()
+            ctx.moveTo(-size, size)
+            ctx.lineTo(size, 0)
+            ctx.lineTo(-size, -size)
+            ctx.closePath()
+
+            ctx.fillStyle = color
+            ctx.fill()
+            ctx.restore()
+        }
+
+        function drawTrail(trails, trailColor) {
+            for (let i = trails.length - 1; i >= 0; i--) {
+                const trail = trails[i]
+
+                ctx.save()
+                ctx.translate(trail.x, trail.y)
+                ctx.rotate(trail.angle)
+                ctx.globalAlpha = trail.alpha
+
+                ctx.beginPath()
+                ctx.moveTo(-trail.size, trail.size)
+                ctx.lineTo(trail.size, 0)
+                ctx.lineTo(-trail.size, -trail.size)
+                ctx.closePath()
+
+                ctx.fillStyle = trailColor
+                ctx.fill()
+                ctx.restore()
+
+                trail.alpha -= 0.02
+                trail.size *= 0.98
+
+                if (trail.alpha <= 0) {
+                    trails.splice(i, 1)
+                }
+            }
+        }
+
+        function updateDragon() {
+            const dragon = dragonRef.current
+            const target = targetRef.current
+
+            const dx = target.x - dragon.x
+            const dy = target.y - dragon.y
+            const distance = Math.sqrt(dx * dx + dy * dy)
+
+            dragon.angle = Math.atan2(dy, dx)
+
+            if (distance > 1) {
+                dragon.x += dx * dragon.speed
+                dragon.y += dy * dragon.speed
+            }
+
+            trailsRef.current.push({
+                x: dragon.x,
+                y: dragon.y,
+                size: dragon.size,
+                angle: dragon.angle,
+                alpha: 1,
+            })
+
+            if (trailsRef.current.length > 50) {
+                trailsRef.current.shift()
+            }
+        }
+
+        function animate() {
+            const colors = getColors()
+
+            ctx.clearRect(0, 0, canvas.width, canvas.height)
+
+            drawTrail(trailsRef.current, colors.trail)
+            updateDragon()
+
+            const dragon = dragonRef.current
+            drawDragon(dragon.x, dragon.y, dragon.size, dragon.angle, colors.dragon)
+
+            animationRef.current = requestAnimationFrame(animate)
+        }
+
+        const handleMouseMove = (e) => {
+            targetRef.current.x = e.clientX
+            targetRef.current.y = e.clientY
+        }
+
+        window.addEventListener("mousemove", handleMouseMove)
+        animate()
+
+        return () => {
+            window.removeEventListener("resize", resizeCanvas)
+            window.removeEventListener("mousemove", handleMouseMove)
+            if (animationRef.current) {
+                cancelAnimationFrame(animationRef.current)
+            }
+        }
+    }, [isVisible])
+
+    if (!isVisible) {
+        return null
+    }
+
+    return (
+        <canvas
+            ref={canvasRef}
+            className={`fixed inset-0 pointer-events-none z-50 transition-opacity duration-300 ${
+                cursorEnabled ? 'opacity-100' : 'opacity-0'
+            }`}
+            style={{ mixBlendMode: "normal" }}
+        />
+    )
+}
\ No newline at end of file
Index: lab4/components/todo/TodoStatus.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/TodoStatus.jsx b/lab4/components/todo/TodoStatus.jsx
new file mode 100644
--- /dev/null	(date 1759843422624)
+++ b/lab4/components/todo/TodoStatus.jsx	(date 1759843422624)
@@ -0,0 +1,54 @@
+"use client"
+
+import {LoadingSpinner} from "@/components/ui/LoadingSpinner"
+import { AlertCircle, Inbox } from "lucide-react"
+
+export default function TodoStatus({ status, message, onRetry }) {
+    if (status === "loading") {
+        return (
+            <div className="py-12">
+                <LoadingSpinner />
+            </div>
+        )
+    }
+
+    if (status === "error") {
+        return (
+            <div className="glass-card rounded-2xl p-8 text-center space-y-4 animate-scale-in">
+                <div className="flex justify-center">
+                    <div className="p-4 rounded-full bg-destructive/10">
+                        <AlertCircle className="w-12 h-12 text-destructive" />
+                    </div>
+                </div>
+                <div>
+                    <h3 className="text-lg font-semibold text-foreground mb-2">Виникла помилка</h3>
+                    <p className="text-sm text-muted-foreground">{message}</p>
+                </div>
+                <button
+                    onClick={onRetry}
+                    className="gradient-bg text-primary-foreground px-6 py-3 rounded-xl font-medium hover:shadow-lg hover:shadow-primary/30 transition-all duration-300 hover:scale-105"
+                >
+                    Спробувати знову
+                </button>
+            </div>
+        )
+    }
+
+    if (status === "empty") {
+        return (
+            <div className="glass-card rounded-2xl p-12 text-center space-y-4 animate-scale-in">
+                <div className="flex justify-center">
+                    <div className="p-4 rounded-full bg-muted">
+                        <Inbox className="w-12 h-12 text-muted-foreground" />
+                    </div>
+                </div>
+                <div>
+                    <h3 className="text-lg font-semibold gradient-text mb-2">Немає завдань</h3>
+                    <p className="text-sm text-muted-foreground">{message || "Додайте нове завдання, щоб почати!"}</p>
+                </div>
+            </div>
+        )
+    }
+
+    return null
+}
Index: lab4/components/layout/Footer.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/layout/Footer.jsx b/lab4/components/layout/Footer.jsx
new file mode 100644
--- /dev/null	(date 1759843851673)
+++ b/lab4/components/layout/Footer.jsx	(date 1759843851673)
@@ -0,0 +1,42 @@
+"use client"
+
+import { Heart, Github } from "lucide-react"
+import { useEffect, useState } from "react"
+
+export default function Footer() {
+    const [currentYear, setCurrentYear] = useState(2024)
+
+    useEffect(() => {
+        setCurrentYear(new Date().getFullYear())
+    }, [])
+
+    return (
+        <footer className="border-t border-border/50 mt-auto bg-card transition-colors duration-300">
+            <div className="container mx-auto px-4 py-6">
+                <div className="flex flex-col md:flex-row items-center justify-between gap-4">
+                    <div className="flex items-center gap-2 text-sm text-muted-foreground">
+                        <span>Створено з</span>
+                        <Heart className="w-4 h-4 text-destructive animate-pulse" />
+                        <span>у {currentYear}</span>
+                    </div>
+
+                    <div className="flex items-center gap-4">
+                        <a
+                            href="https://github.com/Hyptofon"
+                            target="_blank"
+                            rel="noopener noreferrer"
+                            className="p-2 rounded-full hover:bg-primary/10 transition-all hover-lift"
+                            aria-label="GitHub"
+                        >
+                            <Github className="w-5 h-5 text-muted-foreground hover:text-primary transition-colors" />
+                        </a>
+                    </div>
+
+                    <div className="text-xs text-muted-foreground">
+                        <span className="gradient-text font-semibold">React Design Patterns</span> • v1.0.0
+                    </div>
+                </div>
+            </div>
+        </footer>
+    )
+}
Index: lab4/components/layout/Header.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/layout/Header.jsx b/lab4/components/layout/Header.jsx
new file mode 100644
--- /dev/null	(date 1759843918425)
+++ b/lab4/components/layout/Header.jsx	(date 1759843918425)
@@ -0,0 +1,63 @@
+"use client"
+
+import { CheckCircle2, Moon, Sun, MousePointer2, MousePointerClick } from "lucide-react"
+import { useTheme } from "@/contexts/ThemeContext"
+import { useCursor } from '@/contexts/CursorContext'
+
+export default function Header() {
+    const { theme, toggleTheme, mounted } = useTheme()
+    const { cursorEnabled, toggleCursor } = useCursor()
+
+    return (
+        <header className="sticky top-0 z-40 border-b border-border/50 bg-card/95 backdrop-blur-sm transition-colors duration-300">
+            <div className="container mx-auto px-4 py-4">
+                <div className="flex items-center justify-between">
+                    <div className="flex items-center gap-3 animate-slide-up">
+                        <div className="relative">
+                            <div className="absolute inset-0 gradient-bg rounded-full blur-lg opacity-50 animate-glow" />
+                            <CheckCircle2 className="w-8 h-8 text-primary relative z-10" />
+                        </div>
+                        <div>
+                            <h1 className="text-2xl font-bold gradient-text">Сучасний Todo</h1>
+                            <p className="text-xs text-muted-foreground">Керуйте завданнями з задоволенням</p>
+                        </div>
+                    </div>
+
+                    <div className="flex items-center gap-2">
+                        <button
+                            onClick={toggleCursor}
+                            className="p-2.5 rounded-xl bg-secondary/50 hover:bg-secondary transition-all duration-300 hover:scale-110 relative group"
+                            aria-label="Toggle custom cursor"
+                            title={cursorEnabled ? "Вимкнути кастомний курсор" : "Увімкнути кастомний курсор"}
+                        >
+                            {cursorEnabled ? (
+                                <MousePointerClick className="w-5 h-5 text-primary" />
+                            ) : (
+                                <MousePointer2 className="w-5 h-5 text-muted-foreground" />
+                            )}
+                            <span className="absolute -bottom-8 left-1/2 -translate-x-1/2 px-2 py-1 bg-popover text-popover-foreground text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap pointer-events-none">
+                                {cursorEnabled ? "Вимкнути" : "Увімкнути"}
+                            </span>
+                        </button>
+
+                        <button
+                            onClick={toggleTheme}
+                            className="p-2.5 rounded-xl bg-secondary/50 hover:bg-secondary transition-all duration-300 hover:scale-110 relative group"
+                            aria-label="Toggle theme"
+                            title={theme === "dark" ? "Світла тема" : "Темна тема"}
+                        >
+                            {mounted && theme === "dark" ? (
+                                <Sun className="w-5 h-5 text-primary" />
+                            ) : (
+                                <Moon className="w-5 h-5 text-primary" />
+                            )}
+                            <span className="absolute -bottom-8 left-1/2 -translate-x-1/2 px-2 py-1 bg-popover text-popover-foreground text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap pointer-events-none">
+                                {theme === "dark" ? "Світла" : "Темна"}
+                            </span>
+                        </button>
+                    </div>
+                </div>
+            </div>
+        </header>
+    )
+}
\ No newline at end of file
Index: lab4/components/todo/AddTodoForm.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/AddTodoForm.jsx b/lab4/components/todo/AddTodoForm.jsx
new file mode 100644
--- /dev/null	(date 1759839524935)
+++ b/lab4/components/todo/AddTodoForm.jsx	(date 1759839524935)
@@ -0,0 +1,46 @@
+"use client"
+
+import { useState } from "react"
+import { Plus, Sparkles } from "lucide-react"
+
+export default function AddTodoForm({ onAdd }) {
+    const [task, setTask] = useState("")
+    const [isFocused, setIsFocused] = useState(false)
+
+    const handleSubmit = (e) => {
+        e.preventDefault()
+        const trimmed = task.trim()
+        if (!trimmed) return
+        onAdd(trimmed)
+        setTask("")
+    }
+
+    return (
+        <form onSubmit={handleSubmit} className="space-y-3">
+            <div className={`relative transition-all duration-300 ${isFocused ? "scale-[1.02]" : ""}`}>
+                <input
+                    type="text"
+                    value={task}
+                    onChange={(e) => setTask(e.target.value)}
+                    onFocus={() => setIsFocused(true)}
+                    onBlur={() => setIsFocused(false)}
+                    placeholder="Додайте нове завдання..."
+                    className="w-full px-4 py-4 pr-12 rounded-2xl bg-secondary/50 border-2 border-border focus:border-primary focus:outline-none focus:ring-4 focus:ring-primary/20 transition-all duration-300 text-foreground placeholder:text-muted-foreground"
+                />
+                <Sparkles
+                    className={`absolute right-4 top-1/2 -translate-y-1/2 w-5 h-5 text-primary transition-all duration-300 ${
+                        isFocused ? "opacity-100 rotate-12" : "opacity-40"
+                    }`}
+                />
+            </div>
+
+            <button
+                type="submit"
+                className="w-full gradient-bg text-primary-foreground rounded-2xl px-6 py-4 font-semibold flex items-center justify-center gap-2 hover:shadow-lg hover:shadow-primary/30 transition-all duration-300 hover:scale-[1.02] active:scale-[0.98]"
+            >
+                <Plus className="w-5 h-5" />
+                Додати завдання
+            </button>
+        </form>
+    )
+}
Index: lab4/components/ui/LoadingSpinner.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/ui/LoadingSpinner.jsx b/lab4/components/ui/LoadingSpinner.jsx
new file mode 100644
--- /dev/null	(date 1759836852493)
+++ b/lab4/components/ui/LoadingSpinner.jsx	(date 1759836852493)
@@ -0,0 +1,31 @@
+export function LoadingSpinner() {
+    return (
+        <div className="flex flex-col items-center justify-center space-y-6 py-8">
+            <div className="relative">
+                <div className="w-20 h-20 border-4 border-primary/20 border-t-primary rounded-full animate-spin"></div>
+                <div
+                    className="absolute inset-2 w-16 h-16 border-4 border-transparent border-r-secondary rounded-full animate-spin"
+                    style={{ animationDirection: "reverse", animationDuration: "1.5s" }}
+                ></div>
+                <div
+                    className="absolute inset-4 w-12 h-12 border-4 border-transparent border-b-accent rounded-full animate-spin"
+                    style={{ animationDuration: "2s" }}
+                ></div>
+                <div className="absolute inset-0 flex items-center justify-center">
+                    <div className="w-3 h-3 gradient-bg rounded-full animate-pulse"></div>
+                </div>
+            </div>
+
+            <div className="text-center space-y-2">
+                <h3 className="text-lg font-semibold gradient-text animate-pulse">Завантаження завдань...</h3>
+                <p className="text-muted-foreground text-sm">Отримуємо дані з сервера</p>
+
+                <div className="flex justify-center space-x-1 mt-4">
+                    <div className="w-2 h-2 gradient-bg rounded-full animate-bounce"></div>
+                    <div className="w-2 h-2 gradient-bg rounded-full animate-bounce" style={{ animationDelay: "0.1s" }}></div>
+                    <div className="w-2 h-2 gradient-bg rounded-full animate-bounce" style={{ animationDelay: "0.2s" }}></div>
+                </div>
+            </div>
+        </div>
+    )
+}
Index: lab4/components/todo/TodoList.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/TodoList.jsx b/lab4/components/todo/TodoList.jsx
new file mode 100644
--- /dev/null	(date 1759843171975)
+++ b/lab4/components/todo/TodoList.jsx	(date 1759843171975)
@@ -0,0 +1,121 @@
+"use client"
+
+import { useMemo } from "react"
+import AddTodoForm from "./AddTodoForm"
+import TodoItem from "./TodoItem"
+import TodoFilters from "./TodoFilters"
+import TodoStatus from "./TodoStatus"
+import TodoPagination from "./TodoPagination"
+import TodoStats from "./TodoStats"
+import useTodos from "@/hooks/useTodos"
+import { notify } from "@/lib/utils/notify"
+
+export default function TodoList() {
+    const {
+        todos,
+        isLoading,
+        error,
+        addTodo,
+        deleteTodo,
+        toggleTodo,
+        editTodoTitle,
+        refresh,
+        currentPage,
+        limitPerPage,
+        totalTodos,
+        totalPages,
+        goToNextPage,
+        goToPrevPage,
+        setLimit,
+        searchTerm,
+        setSearchTerm,
+        filter,
+        setFilter,
+        stats,
+    } = useTodos(10)
+
+    const handleAddTodo = (task) => {
+        addTodo(task)
+        notify.success("✨ Завдання додано!")
+    }
+
+    const handleDelete = async (id) => {
+        try {
+            await deleteTodo(id)
+            notify.success("🗑️ Завдання видалено")
+        } catch (err) {
+            notify.error("❌ Не вдалося видалити")
+        }
+    }
+
+    const handleToggle = async (id) => {
+        try {
+            await toggleTodo(id)
+            notify.info("✅ Статус оновлено")
+        } catch (err) {
+            notify.error("❌ Помилка оновлення")
+        }
+    }
+
+    const handleEditTitle = async (id, newTitle) => {
+        try {
+            await editTodoTitle(id, newTitle)
+            notify.success("📝 Заголовок оновлено")
+        } catch (err) {
+            notify.error("❌ Не вдалося оновити")
+        }
+    }
+
+    const todoItems = useMemo(
+        () =>
+            todos.map((todo, index) => (
+                <TodoItem
+                    key={todo.id}
+                    id={todo.id}
+                    task={todo.todo || todo.task}
+                    completed={todo.completed}
+                    onDelete={handleDelete}
+                    onToggle={handleToggle}
+                    onEditTitle={handleEditTitle}
+                    index={index}
+                />
+            )),
+        [todos],
+    )
+
+    return (
+        <div className="space-y-6">
+            <AddTodoForm onAdd={handleAddTodo} />
+
+            <TodoStats total={stats.total} remaining={stats.remaining} completed={stats.completed} />
+
+            <TodoFilters
+                filter={filter}
+                setFilter={setFilter}
+                query={searchTerm}
+                setQuery={setSearchTerm}
+                remaining={stats.remaining}
+            />
+
+            <TodoStatus
+                status={isLoading ? "loading" : error ? "error" : todos.length === 0 ? "empty" : "ok"}
+                message={error ? String(error.message || error) : "Немає завдань за критеріями"}
+                onRetry={refresh}
+            />
+
+            {todos.length > 0 && <div className="space-y-2">{todoItems}</div>}
+
+            {totalTodos > 0 && (
+                <TodoPagination
+                    currentPage={currentPage}
+                    totalPages={totalPages}
+                    perPage={limitPerPage}
+                    setPerPage={setLimit}
+                    goToNextPage={goToNextPage}
+                    goToPrevPage={goToPrevPage}
+                    totalItems={totalTodos}
+                />
+            )}
+        </div>
+    )
+}
Index: lab4/lib/utils/notify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/lib/utils/notify.js b/lab4/lib/utils/notify.js
new file mode 100644
--- /dev/null	(date 1759837874704)
+++ b/lab4/lib/utils/notify.js	(date 1759837874704)
@@ -0,0 +1,25 @@
+"use client"
+
+import { toast } from "sonner"
+import { CheckCircle2, Info, AlertCircle } from "lucide-react"
+
+export const notify = {
+    success: (message) =>
+        toast.success(
+            <span className="flex items-center gap-2">
+        <CheckCircle2 className="w-5 h-5 text-green-500" /> {message}
+      </span>,
+        ),
+    error: (message) =>
+        toast.error(
+            <span className="flex items-center gap-2">
+        <AlertCircle className="w-5 h-5 text-red-500" /> {message}
+      </span>,
+        ),
+    info: (message) =>
+        toast.info(
+            <span className="flex items-center gap-2">
+        <Info className="w-5 h-5 text-blue-500" /> {message}
+      </span>,
+        ),
+}
Index: lab4/components/todo/TodoStats.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/TodoStats.jsx b/lab4/components/todo/TodoStats.jsx
new file mode 100644
--- /dev/null	(date 1759837929501)
+++ b/lab4/components/todo/TodoStats.jsx	(date 1759837929501)
@@ -0,0 +1,81 @@
+"use client"
+
+import { ListTodo, CheckCircle2, Clock, TrendingUp } from "lucide-react"
+
+export default function TodoStats({ total, remaining, completed }) {
+    const completionRate = total > 0 ? Math.round((completed / total) * 100) : 0
+
+    const stats = [
+        {
+            icon: ListTodo,
+            label: "Всього",
+            value: total,
+            gradient: "from-blue-500 to-cyan-500",
+            shadowColor: "shadow-blue-500/30",
+        },
+        {
+            icon: Clock,
+            label: "Активні",
+            value: remaining,
+            gradient: "from-amber-500 to-orange-500",
+            shadowColor: "shadow-amber-500/30",
+        },
+        {
+            icon: CheckCircle2,
+            label: "Виконано",
+            value: completed,
+            gradient: "from-green-500 to-emerald-500",
+            shadowColor: "shadow-green-500/30",
+        },
+    ]
+
+    return (
+        <div className="space-y-4">
+            <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
+                {stats.map((stat, index) => (
+                    <div
+                        key={stat.label}
+                        className="glass-card rounded-2xl p-5 hover-lift animate-scale-in group"
+                        style={{ animationDelay: `${index * 100}ms` }}
+                    >
+                        <div className="flex items-center gap-4">
+                            <div
+                                className={`p-4 rounded-xl bg-gradient-to-br ${stat.gradient} shadow-lg ${stat.shadowColor} group-hover:scale-110 transition-transform duration-300`}
+                            >
+                                <stat.icon className="w-6 h-6 text-white" />
+                            </div>
+                            <div>
+                                <p className="text-sm text-muted-foreground font-medium">{stat.label}</p>
+                                <p className="text-3xl font-bold gradient-text">{stat.value}</p>
+                            </div>
+                        </div>
+                    </div>
+                ))}
+            </div>
+
+            {total > 0 && (
+                <div
+                    className="glass-card rounded-2xl p-5 space-y-3 hover-lift animate-scale-in"
+                    style={{ animationDelay: "300ms" }}
+                >
+                    <div className="flex items-center justify-between">
+                        <div className="flex items-center gap-2">
+                            <TrendingUp className="w-5 h-5 text-primary" />
+                            <span className="text-sm font-semibold text-foreground">Прогрес виконання</span>
+                        </div>
+                        <span className="text-2xl font-bold gradient-text">{completionRate}%</span>
+                    </div>
+                    <div className="relative h-4 bg-muted rounded-full overflow-hidden">
+                        <div className="absolute inset-0 shimmer" style={{ animationDelay: "1s" }} />
+                        <div
+                            className="h-full gradient-bg transition-all duration-1000 ease-out rounded-full relative overflow-hidden"
+                            style={{ width: `${completionRate}%` }}
+                        >
+                            <div className="absolute inset-0 shimmer" />
+                        </div>
+                    </div>
+                </div>
+            )}
+        </div>
+    )
+}
Index: lab4/components/todo/TodoApp.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/TodoApp.jsx b/lab4/components/todo/TodoApp.jsx
new file mode 100644
--- /dev/null	(date 1759839545160)
+++ b/lab4/components/todo/TodoApp.jsx	(date 1759839545160)
@@ -0,0 +1,18 @@
+"use client"
+
+import TodoList from "./TodoList"
+
+export default function TodoApp() {
+    return (
+        <div className="max-w-4xl mx-auto animate-scale-in">
+            <div className="text-center mb-8 space-y-3">
+                <h2 className="text-4xl md:text-5xl font-bold gradient-text">Ваші Завдання</h2>
+                <p className="text-muted-foreground text-lg">Організуйте свій день ефективно та стильно ✨</p>
+            </div>
+
+            <div className="bg-card/95 border border-border/50 rounded-3xl p-6 md:p-8 shadow-xl transition-all duration-300 hover:shadow-2xl">
+                <TodoList />
+            </div>
+        </div>
+    )
+}
Index: lab4/components/todo/TodoItem.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab4/components/todo/TodoItem.jsx b/lab4/components/todo/TodoItem.jsx
new file mode 100644
--- /dev/null	(date 1759839554323)
+++ b/lab4/components/todo/TodoItem.jsx	(date 1759839554323)
@@ -0,0 +1,129 @@
+"use client"
+
+import { useCallback, useState, memo } from "react"
+import { Check, Trash2, Edit2, Save, X } from "lucide-react"
+
+const TodoItem = memo(function TodoItem({ id, task, completed, onToggle, onDelete, onEditTitle, index = 0 }) {
+    const [isEditing, setIsEditing] = useState(false)
+    const [draft, setDraft] = useState(task || "")
+    const [isHovered, setIsHovered] = useState(false)
+
+    const startEdit = useCallback(() => {
+        setDraft(task || "")
+        setIsEditing(true)
+    }, [task])
+
+    const cancelEdit = useCallback(() => {
+        setIsEditing(false)
+        setDraft(task || "")
+    }, [task])
+
+    const saveEdit = useCallback(async () => {
+        const trimmed = (draft || "").trim()
+        if (!trimmed) return
+        await onEditTitle(id, trimmed)
+        setIsEditing(false)
+    }, [draft, id, onEditTitle])
+
+    return (
+        <li
+            className={`group relative overflow-hidden rounded-2xl transition-all duration-500 ease-out bg-secondary/30 border border-border/50 animate-slide-up ${
+                isHovered ? "scale-[1.02] shadow-xl border-primary/50" : "scale-100"
+            }`}
+            style={{ animationDelay: `${index * 50}ms` }}
+            onMouseEnter={() => setIsHovered(true)}
+            onMouseLeave={() => setIsHovered(false)}
+        >
+            <div className="flex items-center gap-4 p-4">
+                <button
+                    onClick={() => onToggle(id)}
+                    className={`relative flex-shrink-0 w-8 h-8 rounded-xl border-2 transition-all duration-500 ${
+                        completed
+                            ? "bg-gradient-to-br from-green-400 to-emerald-500 border-green-500 shadow-lg shadow-green-500/50 rotate-[360deg]"
+                            : "border-border hover:border-primary hover:scale-110 hover:rotate-12"
+                    }`}
+                    aria-label={completed ? "Позначити як невиконане" : "Позначити як виконане"}
+                >
+                    {completed && (
+                        <Check className="w-5 h-5 text-white absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 animate-scale-in" />
+                    )}
+                </button>
+
+                {/* Task content */}
+                <div className="flex-1 min-w-0">
+                    {!isEditing ? (
+                        <span
+                            className={`block text-base transition-all duration-500 ${
+                                completed ? "task-completed text-muted-foreground" : "text-foreground font-medium"
+                            }`}
+                        >
+              {task}
+            </span>
+                    ) : (
+                        <input
+                            value={draft}
+                            onChange={(e) => setDraft(e.target.value)}
+                            onKeyDown={(e) => {
+                                if (e.key === "Enter") saveEdit()
+                                if (e.key === "Escape") cancelEdit()
+                            }}
+                            className="w-full px-4 py-2 rounded-xl bg-background border-2 border-primary focus:outline-none focus:ring-4 focus:ring-primary/20 transition-all duration-300 text-foreground"
+                            autoFocus
+                        />
+                    )}
+                </div>
+
+                <div
+                    className={`flex items-center gap-2 transition-all duration-500 ${
+                        isHovered || isEditing ? "opacity-100 translate-x-0" : "opacity-0 translate-x-8"
+                    }`}
+                >
+                    {!isEditing ? (
+                        <>
+                            <button
+                                onClick={startEdit}
+                                className="p-2.5 rounded-xl bg-secondary/50 hover:bg-blue-500/20 text-blue-600 dark:text-blue-400 transition-all duration-300 hover:scale-110 hover:rotate-12"
+                                title="Редагувати"
+                            >
+                                <Edit2 className="w-4 h-4" />
+                            </button>
+
+                            <button
+                                onClick={() => onDelete(id)}
+                                className="p-2.5 rounded-xl bg-secondary/50 hover:bg-red-500/20 text-red-600 dark:text-red-400 transition-all duration-300 hover:scale-110 hover:rotate-12"
+                                title="Видалити"
+                            >
+                                <Trash2 className="w-4 h-4" />
+                            </button>
+                        </>
+                    ) : (
+                        <>
+                            <button
+                                onClick={saveEdit}
+                                className="p-2.5 rounded-xl bg-gradient-to-br from-green-400 to-emerald-500 text-white hover:shadow-lg hover:shadow-green-500/50 transition-all duration-300 hover:scale-110"
+                                title="Зберегти"
+                            >
+                                <Save className="w-4 h-4" />
+                            </button>
+                            <button
+                                onClick={cancelEdit}
+                                className="p-2.5 rounded-xl bg-secondary/50 hover:bg-muted text-muted-foreground transition-all duration-300 hover:scale-110"
+                                title="Скасувати"
+                            >
+                                <X className="w-4 h-4" />
+                            </button>
+                        </>
+                    )}
+                </div>
+            </div>
+
+            <div
+                className={`absolute bottom-0 left-0 right-0 h-1 gradient-bg transition-all duration-500 ${
+                    isHovered ? "opacity-100 scale-x-100" : "opacity-0 scale-x-0"
+                }`}
+            />
+        </li>
+    )
+})
+
+export default TodoItem
